Given an integer N, find whether it is Armstrong number or not.  

Write a function solution that accepts an integer N. The function should return 1 if it is an Armstrong number else 0. 

Input
    153 

Output
    1 

Note : For 153 number of digits are 3.

Sum of digits raises to the power total number of digits = 13 + 53 + 33 = 153, which is equal to an original number 
and hence 153 is an Armstrong number.

_____________________________________***********************************************_______________________________

code : 

#include<stdio.h>
#include<math.h>

int countDigit(int n){
    int count=0;
    while(n){
        count++;
        n=n/10;
    }
    return count;
}
int solution(int N)
{
    int count=countDigit(N);
    int r,sum=0;
    int x=N;
    while(N){
        r=N%10;
        sum=sum+pow(r,count);
        N=N/10;
    }
    if(sum==x){
        return 1;
    }
    else{
        return 0;
    }
}

int main(void) 
{    
    int N;
    scanf("%d",&N);
    printf("%d",solution(N));
    return 0;
}

